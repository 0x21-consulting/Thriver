//Media Queries
@1450: ~"only screen and (max-width: 1450px)";
@1250: ~"only screen and (max-width: 1250px)";
@1024: ~"only screen and (max-width: 1024px)";
@mobile: ~"only screen and (max-width: 768px)";


////Colors

//Color Variables
@white: #ffffff;
@black: #062031;
@gray: #ebf2f2;
@navy: #062131;
@blue: #2c5465; //Only used in Utility nav twice?
@teal: #00b7c5;
@aqua: #1db7c5;
@orange: #f1592a;
@yellow: #F5D76E;
@lightBlue: #566a75; //Flat
@darkBlue: #4e606a; //Flat
@midnightBlue: #6d7f88; //Flat

//Color Classes
.color (@property, @color, @style) {
    & when (@style = light) {
        @{property}: lighten(@color, 2.5%);
    }
    & when (@style = lighter) {
        @{property}: lighten(@color, 5%);
    }
    & when (@style = lightest) {
        @{property}: lighten(@color, 7.5%);
    }
    & when (@style = dark) {
        @{property}: darken(@color, 2.5%);
    }
    & when (@style = darker) {
        @{property}: darken(@color, 5%);
    }
    & when (@style = darkest) {
        @{property}: darken(@color, 7.5%);
    }
    & when (@style = none) {
        @{property}: @color;
    }
}


////Shadows

//Mixins
.boxShadow(@horizontal, @vertical, @blur, @spread, @opacity){
    -webkit-box-shadow: @horizontal @vertical @blur @spread rgba(0,0,0,@opacity);
    -moz-box-shadow: @horizontal @vertical @blur @spread rgba(0,0,0,@opacity);
    box-shadow: @horizontal @vertical @blur @spread rgba(0,0,0,@opacity);
}
.insetBoxShadow(@horizontal, @vertical, @blur, @spread, @opacity){
    -webkit-box-shadow: inset @horizontal @vertical @blur @spread rgba(0,0,0,@opacity);
    -moz-box-shadow: inset @horizontal @vertical @blur @spread rgba(0,0,0,@opacity);
    box-shadow: inset @horizontal @vertical @blur @spread rgba(0,0,0,@opacity);
}

//Definitions
.shadow(@type){
    & when (@type = far){
        .boxShadow(0px,0px,20px,-3px,0.2);
    }
    & when (@type = closeInset){
        .insetBoxShadow(0px,0px,10px,0px,0.5);
    }
    & when (@type = close){
        .boxShadow(0px,0px,6px,-3px,0.2);
    }
    & when (@type = closeLeft){
        .boxShadow(-5px,0px,6px,-3px,0.2);
    }
    & when (@type = closeRight){
        .boxShadow(5px,0px,6px,-3px,0.2);
    }
}

//Exception Shadow
.hardShadow(@type){

}

//Deactivate Shadow
.shadowNone{
    -webkit-box-shadow: none;
    -moz-box-shadow: none;
    box-shadow: none;
}


//Opacity
.opacity(@amt){
    zoom: 1;
    filter: ~'alpha(opacity='100*@amt~')';
    opacity: @amt;
}

//Opacity
//Flex
//Animations
//Transitions
//Border Radius
//Padding/Margina
//Text Shadow?





//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



//Color Mixins
.backgroundColorButton(@x){
    background-color: @x;
    &:hover{
        background-color: darken(@x, 5%);
    }
    &:active{
        background-color: darken(@x, 10%);
    }
    &:focus{
        background-color: @x;
    }
}

.colorButton(@x){
    color: @x;
    &:hover{
        color: darken(@x, 5%);
    }
    &:active{
        color: darken(@x, 10%);
    }
    &:focus{
        color: @x;
    }
}


//Special Condition of the .background_color_button mixin
.utilityBackgroundColorButton(@x){
    button{
        background-color: @x;
        &:hover{
            background-color: darken(@x, 5%);
        }
        &:active{
            background-color: darken(@x, 10%);
        }
        &:focus{
            background-color: @x;
        }
    }
    &.active button{
        background-color: @navy;
         &:hover{
            background-color: darken(@navy, 5%);
        }
        &:active{
            background-color: darken(@navy, 10%);
        }  
        &:focus{
            background-color: @navy;
        }    
    }
}

.utilityNotificationBorder(@x){
    button{
        .unreadNotifications{
            border-color: @x;
        }
        &:hover{
            .unreadNotifications{
                border-color: darken(@x, 5%);
            }
        }
        &:active{
            .unreadNotifications{
                border-color: darken(@x, 10%);
            }
        }
        &:focus{
            .unreadNotifications{
                border-color: @x;
            }
        }
    }  
}

//Special Condition for utility text links
.utilityColorButton(@x){
    button{
        color: @x;
        &:hover{
            color: darken(@x, 5%);
        }
        &:active{
            color: darken(@x, 10%);
        }
        &:focus{
            color: @x;
        }
    }
    &.active button{
        color: @navy;
         &:hover{
            color: darken(@navy, 5%);
        }
        &:active{
            color: darken(@navy, 10%);
        }  
        &:focus{
            color: @navy;
        }    
    }
}



.mastheadGradient{
/* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#062131+0,ffffff+100&1+0,0+100 */
background: -moz-linear-gradient(top,  rgba(6,33,49,1) 0%, rgba(255,255,255,0) 100%); /* FF3.6-15 */
background: -webkit-linear-gradient(top,  rgba(6,33,49,1) 0%,rgba(255,255,255,0) 100%); /* Chrome10-25,Safari5.1-6 */
background: linear-gradient(to bottom,  rgba(6,33,49,1) 0%,rgba(255,255,255,0) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#062131', endColorstr='#00ffffff',GradientType=0 ); /* IE6-9 */

}
